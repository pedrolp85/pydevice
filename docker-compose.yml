version: "3.9"

services:

  builder:
    build:
      context: .
      dockerfile: Dockerfile-builder
    volumes:
      - .:/code
    user: $UID:$GID
  
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile-scheduler
    volumes:
    - ./task_scheduler:/task_scheduler    
    depends_on:
      - rabbitmq
    command: ["python", "--version"]
  
  app: 
    build: .
    volumes:
    - ./app:/app
    ports:
    - 80:80
    entrypoint: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "80", "--reload"]
    depends_on: 
    - mysql

  mysql:
    image: mysql:8.0.19
    ports:
     - 3306:3306
    # volumes:
    # - ./dbfiles:/var/lib/mysql
    volumes:
    - ./scripts/initialize_db.sql:/docker-entrypoint-initdb.d/initialize_db.sql
    
    environment: 
      - MYSQL_DATABASE=py_device
      - MYSQL_ROOT_PASSWORD=password
    # command: mysqld --init-file=
  
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.8.0
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    restart: always
    ports:
      - 5601:5601

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.8.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536    
    environment:
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  
  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:7.8.0
    user: root
    volumes:
      - ./conf/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672



  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.0.1
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # broker:
  #   image: confluentinc/cp-kafka:7.0.1
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  #     # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #     # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     # KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #     # KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE 

volumes:
  esdata: